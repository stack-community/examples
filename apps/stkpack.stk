( # pack file recursion #
    (code) var 

    # Delete verbose spaces #
    code ([\s\t\n\r]+) regex (i) (
        code i ( ) replace (code) var
    ) for (Deleted verbose spaces.) println

    (
        # Loading dependence files #
        code (.* read-file eval) regex (i) (
            code i () replace (code) var
            i ( read-file eval) () replace
            (\() () replace (\)) () replace 
            copy (Loading ) swap concat println
            read-file ( ) code concat concat (code) var
        ) for
        (The packing is done.) println
        code pack eval
    ) (
        # Create pack file #
        (# This file was created by stkpack # ) code concat 
        name (.stk) () replace (.pack.stk) concat (name) var name write-file
        (All of the packing is completed!\nCreated pack file at ./) name concat println
    ) 
    code (.* read-file eval) regex len 0 equal not if
) (pack) var

(Welcome to stkpack !!!) println
(Please enter Stack script file you want to pack) println
(> ) input (name) var name read-file (result) var

(
    (This file is not found.) println
) (
    result pack eval
) result error:read-file equal if 